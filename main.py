# -*- coding: utf-8 -*-
import random

import telebot
from telebot import types
import json
import requests as req
import db_data
import datetime
from apscheduler.schedulers.background import BackgroundScheduler
from pytz import utc
import time
import re
import to_json
from sheets import Sheets
from collections import defaultdict
import emoji
from threading import Thread, Lock



def send_message_about_late(late_list, chat_id):
    if late_list:
        text = "{time} –æ—Ç—á—ë—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–æ–≤—Ä–µ–º—è: {users}. {random_phrase} {fine}".format(
            users=' '.join(late_list), time=report_type,
            random_phrase=get_random_phrase(late_message_variants),
            fine=additional_text
        ),
    else:
        text = "{time} –æ—Ç—á—ë—Ç —Å–¥–∞–ª–∏ –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏. {random_phrase}".format(
            time=report_type,
            random_phrase=get_random_phrase(phrase_success)
        )
    bot.send_message(chat_id, text, parse_mode='html')
    if report_type == '–í–µ—á–µ—Ä–Ω–∏–π':
        users_data.data['chats'][str(chat_id)]['day'] += 1
        db_data.set_db(users_data.data)


def send_notify(late_list, chat_id):
    if late_list:
        text = "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –æ—Å—Ç–∞–ª–æ—Å—å 15 –º–∏–Ω—É—Ç —á—Ç–æ–±—ã —Å–¥–∞—Ç—å {time} –æ—Ç—á—ë—Ç. –ù–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ—Ç—á—ë—Ç {users}".format(
            users=' '.join(late_list), time=report_type.lower())
    else:
        return False
    bot.send_message(chat_id, text, parse_mode='html')


class Data:
    data = defaultdict(dict, db_data.get_db())

    def new_chat(self, message):
        chat_id = str(message.chat.id)
        if self.data['chats'].get(chat_id) is None:
            self.data['chats'][chat_id] = {'users': {}}
            self.data['chats'][chat_id]['day'] = 1

            sheet_name, sheet_id = Sheets.create_table(message.chat.title)
            self.data['chats'][chat_id]['sheet_id'] = sheet_id
            self.data['chats'][chat_id]['sheet_url'] = sheet_name

            db_data.set_db(self.data)
            return True
        else:
            return False

    def set_chat_sheet(self, sheet_id, chat_id):
        self.data['chats'][chat_id]['sheet_id'] = sheet_id

    def send_report(self, message):
        user_id = str(message.from_user.id)
        chat_id = str(message.chat.id)
        full_name = get_full_name(message)
        is_new_user = False

        # TODO —É–±—Ä–∞—Ç—å –ª–∏—à–Ω–∏–π print?
        print('–ü–æ–ª—É—á–µ–Ω –æ—Ç—á—ë—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {name}, –≤—Ä–µ–º—è: {time}'.format(
            name=full_name, time=datetime.datetime.now().strftime("%H:%M:%S")
        ))

        if self.data['chats'][chat_id]['users'].get(user_id) is None:
            self.new_user(message)
            is_new_user = True

        else:
            if not self.data['chats'][chat_id]['users'][user_id]['is_done']:
                if report_type == '–£—Ç—Ä–µ–Ω–Ω–∏–π':
                    if not is_new_user:
                        Sheets.change_sheet(users_data.data['chats'][str(message.chat.id)]['sheet_id'])
                        Sheets.new_day(get_date_str(), full_name)
            else:
                return False

            self.data['chats'][chat_id]['users'][user_id]['is_done'] = True
            send_user_update(message, report_type, '1')

        db_data.set_db(self.data)

    def new_user(self, message, chat_id=False, full_date=False):
        user_id = str(message.from_user.id)
        user_name = str(message.from_user.username)
        if chat_id == False:
            chat_id = str(message.chat.id)
        Sheets.change_sheet(users_data.data['chats'][str(chat_id)]['sheet_id'])

        if full_date == False:
            full_date = get_date_str()
        full_name = get_full_name(message)

        list_id = Sheets.add_user(get_full_name(message))
        list_id = list_id['replies'][0]['addSheet']['properties']['sheetId']
        Sheets.update_user(full_name, report_type, '1', full_date)
        self.data['chats'][chat_id]['users'][user_id] = {
            'user_name': user_name,
            'is_done': True,
            'status': [],
            'list_id': str(list_id),
            'full_name': full_name,
        }

        db_data.set_db(self.data)

    def remove_user(self, chat_id, user_id):
        user_id = str(user_id)
        chat_id = str(chat_id)
        self.data['chats'][chat_id]['users'].pop(user_id)

    def check_user(self, chat_id, user_id):
        return self.data['chats'][chat_id]['users'].get(user_id) is not None


class Checker:

    def __init__(self):
        self.late_list = []

    @staticmethod
    def send_hour_notify():
        text = "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –æ—Å—Ç–∞–ª—Å—è 1 —á–∞—Å –Ω–∞ —Å–¥–∞—á—É {time} –æ—Ç—á—ë—Ç–∞, –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ—Ç—á—ë—Ç.".format(
            time=report_time_decl.lower())
        for chat_id in users_data.data['chats']:
            bot.send_message(chat_id, text)

    def check_report(self, notify=False):
        global report_type, report_time_decl

        for chat in users_data.data['chats']:

            for user in users_data.data['chats'][chat]['users']:

                if not users_data.data['chats'][chat]['users'][user]['is_done']:
                    # –ï—Å–ª–∏ —É —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ—Ç user_name
                    if users_data.data['chats'][chat]['users'][user]['user_name'] == "None":
                        self.late_list.append("<a href='tg://user?id={user_id}'>{name}</a>".format(
                            user_id=str(user),
                            name=users_data.data['chats'][chat]['users'][user]['full_name']
                        ))
                    else:
                        self.late_list.append('@' + users_data.data['chats'][chat]['users'][user]['user_name'])
                else:
                    if not notify:
                        users_data.data['chats'][chat]['users'][user]['is_done'] = False
                        if report_type == '–í–µ—á–µ—Ä–Ω–∏–π':
                            users_data.data['chats'][chat]['users'][user]['status'] = []

            if notify:
                send_notify(self.late_list, chat)
            else:
                send_message_about_late(self.late_list, chat)

            self.late_list = []

        db_data.set_db(users_data.data)

        if not notify:

            if report_type == '–£—Ç—Ä–µ–Ω–Ω–∏–π':
                report_type = '–í–µ—á–µ—Ä–Ω–∏–π'
                report_time_decl = '–í–µ—á–µ—Ä–Ω–µ–≥–æ'
            else:
                report_type = '–£—Ç—Ä–µ–Ω–Ω–∏–π'
                report_time_decl = '–£—Ç—Ä–µ–Ω–Ω–µ–≥–æ'


def get_random_phrase(phrase_list: list):
    return random.choice(phrase_list)


bot = telebot.TeleBot('6685040611:AAHMXsQ0xLOkWIsZvjNmxtldUUIZU6b9GI0')
my_checker = Checker()
users_data = Data()

admins_status = ['creator', 'administrator']

morning_time = datetime.time(10, 0, 0)
evening_time = datetime.time(23, 59, 59)

morning_time_notify = morning_time
evening_time_notify = evening_time

additional_text = " –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞ –ª—é–±—É—é –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å 250‚ÇΩ, " \
                  "–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞ –≤ —á–∞—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞!üòâ " \
                  "–°–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∏–Ω—è—Ç—ã–º –≤—Å–µ–º–∏ –≤–∞–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º, " \
                  "–∑–∞ –æ–ø–æ–∑–¥–∞–Ω–∏–µ, –¥–∞–∂–µ –º–∏–Ω—É—Ç–Ω–æ–µ, –º—ã –ø–æ–º–æ–≥–∞–µ–º " \
                  "–¥—Ä—É–≥–∏–º üòäüå∏ "

phrase_success = [
    "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í–∞—à–∏ –æ—Ç—á—ë—Ç—ã —Å–∏—è—é—Ç –∫–∞–∫ –∑–≤—ë–∑–¥—ã –≤ –Ω–æ—á–Ω–æ–º –Ω–µ–±–µ! üåü",
    "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π —É—Å–ø–µ—Ö! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã –æ—Ç—Ä–∞–∂–∞—é—Ç –≤–∞—à—É —Å—Ç—Ä–∞—Å—Ç—å –∏ —É–ø–æ—Ä—Å—Ç–≤–æ. üí™",
    "–ë—Ä–∞–≤–æ! –ö–∞–∂–¥—ã–π –≤–∞—à –æ—Ç—á—ë—Ç - —ç—Ç–æ —à–∞–≥ –Ω–∞ –ø—É—Ç–∏ –∫ –≤–µ–ª–∏—á–∏—é. üöÄ",
    "–í—ã –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ –º–∞—Å—Ç–µ—Ä–∞ —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –ø—Ä–∏–º–µ—Ä –¥–ª—è –ø–æ–¥—Ä–∞–∂–∞–Ω–∏—è. üëè",
    "–£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤—É—é—Ç –æ –≤–∞—à–µ–º —Ç–∞–ª–∞–Ω—Ç–µ –∏ —Ç—Ä—É–¥–æ–ª—é–±–∏–∏. üëå",
    "–í—ã –ø—Ä–µ–≤–∑–æ—à–ª–∏ —Å–∞–º–∏ —Å–µ–±—è! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–∞. üé®",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã –∫–∞–∫ –º—É–∑—ã–∫–∞ –¥–ª—è —É—à–µ–π, –ø–æ–ª–Ω—ã–µ –≥–∞—Ä–º–æ–Ω–∏–∏ –∏ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞. üé∂",
    "–ö–∞–∂–¥—ã–π –≤–∞—à –æ—Ç—á—ë—Ç - —ç—Ç–æ –æ—á–µ—Ä–µ–¥–Ω–æ–π —à–µ–¥–µ–≤—Ä! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ. üåà",
    "–í–∞—à —Ç—Ä—É–¥ –Ω–µ –æ—Å—Ç–∞–ª—Å—è –Ω–µ–∑–∞–º–µ—á–µ–Ω–Ω—ã–º. –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –ø—Ä–∏–º–µ—Ä –≤—ã—Å–æ—á–∞–π—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞. üèÖ",
    "–í—ã - –∑–≤–µ–∑–¥–∞! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã –æ–∑–∞—Ä—è—é—Ç –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É. ‚ú®",
    "–ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã –æ—Ç—Ä–∞–∂–∞—é—Ç –≤–∞—à—É –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞—Ä–∞–Ω–∏–µ. üåü",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º–∞ –∏ –≤–Ω–∏–º–∞–Ω–∏—è –∫ –¥–µ—Ç–∞–ª—è–º. üíº",
    "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—Ç –æ–∂–∏–¥–∞–Ω–∏—è. üöÄ",
    "–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–æ–≤—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∫–∞—á–µ—Å—Ç–≤–∞ —Å –≤–∞—à–∏–º–∏ –æ—Ç—á–µ—Ç–∞–º–∏. –ë—Ä–∞–≤–æ! üëç",
    "–ö–∞–∂–¥—ã–π –≤–∞—à –æ—Ç—á—ë—Ç - —ç—Ç–æ –ø—É—Ç–µ–≤–æ–¥–Ω–∞—è –∑–≤–µ–∑–¥–∞ –∫ –º–µ—á—Ç–∞–º –∏ –∞–º–±–∏—Ü–∏—è–º. üå†",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –ø—Ä–∞–∑–¥–Ω–∏–∫ –¥–ª—è –≥–ª–∞–∑ –∏ —É–º–∞. –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! üéâ",
    "–í—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç–µ –Ω–∞—Å –≤—Å–µ—Ö! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –ø—Ä–∏–º–µ—Ä –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç–∏. üíñ",
    "–í–∞—à–µ —É—Å–µ—Ä–¥–∏–µ –≤ –æ—Ç—á–µ—Ç–∞—Ö –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç —Å–∞–º—ã—Ö –≤—ã—Å–æ–∫–∏—Ö –ø–æ—Ö–≤–∞–ª. –í–ø–µ—á–∞—Ç–ª—è—é—â–µ! üëè",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –∫–∞–∫ —Å–≤–µ–∂–∏–π –≤–µ—Ç–µ—Ä, –ø—Ä–∏–Ω–æ—Å—è—â–∏–π –Ω–æ–≤—ã–µ –∏–¥–µ–∏ –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã. üå¨Ô∏è",
    "–í—ã —Å–∏—è–µ—Ç–µ —è—Ä—á–µ –≤—Å–µ—Ö! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞. üåü",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã –æ–∑–∞—Ä—è—é—Ç –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É, –∫–∞–∫ —Å–æ–ª–Ω—Ü–µ –æ—Å–≤–µ—â–∞–µ—Ç —É—Ç—Ä–æ. ‚òÄÔ∏è",
    "–¢–∞–∫–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –ø—Ä–∏–º–µ—Ä —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏. üé®",
    "–í—ã - –∏—Å—Ç–∏–Ω–Ω—ã–µ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª–∏! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, –Ω–∞ —á—Ç–æ –≤—ã —Å–ø–æ—Å–æ–±–Ω—ã. üåà",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –º–æ—Å—Ç –≤ –±—É–¥—É—â–µ–µ –ø–æ–ª–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏ —É—Å–ø–µ—Ö–æ–≤. üåâ",
    "–í—ã –¥–æ–∫–∞–∑–∞–ª–∏, —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –Ω–µ—Ç. –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ. üí™",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –ø–µ—Å–Ω—è —É—Å–ø–µ—Ö–∞, –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –≥–∞—Ä–º–æ–Ω–∏–µ–π –∏ –º–µ–ª–æ–¥–∏–µ–π. üéµ",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –ª–µ–≥–µ–Ω–¥–∞ –æ –≤–∞—à–µ–º —Ç—Ä—É–¥–µ –∏ —Å—Ç–∞—Ä–∞–Ω–∏–∏. –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ! üèÜ",
    "–¢–∞–∫–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –ø—Ä–∏–º–µ—Ä –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã. üîç",
    "–í—ã - –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –¥—É—Ö–∞. üí´",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –∫–∞–∫ –º–∞—è–∫, –æ—Å–≤–µ—â–∞—é—â–∏–π –ø—É—Ç—å –∫ —Ü–µ–ª–∏. –ë–ª–µ—Å—Ç—è—â–µ! üö©",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –º–∏—Ä –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞. üó∫Ô∏è",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –ø–æ—ç–∑–∏—è —É—Å–ø–µ—Ö–∞, –Ω–∞–ø–∏—Å–∞–Ω–Ω–∞—è –≤–∞—à–∏–º–∏ —Ä—É–∫–∞–º–∏. üìú",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –º–æ–∑–∞–∏–∫–∞ —É—Å–ø–µ—Ö–∞, —Å–æ–±—Ä–∞–Ω–Ω–∞—è –∏–∑ –º–µ–ª–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞. üé≠",
    "–í—ã - —á–µ–º–ø–∏–æ–Ω –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–æ–≤, –∫–∞–∂–¥—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö - —Ç—Ä–∏—É–º—Ñ —É—Å–µ—Ä–¥–∏—è! üèÜ",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –∫–∞–∫ –º—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Å–∏–º—Ñ–æ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π –∫–∞–∂–¥–∞—è –Ω–æ—Ç–∞ –Ω–∞ —Å–≤–æ–µ–º –º–µ—Å—Ç–µ. üéº",
    "–í—ã —Ä–∞–∑–≥–∞–¥–∞–ª–∏ –∫–æ–¥ —É—Å–ø–µ—Ö–∞! –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ —à–∏—Ñ—Ä —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞. üóùÔ∏è",
    "–ö–∞–∂–¥—ã–π –≤–∞—à –æ—Ç—á–µ—Ç - –∫–∞–∫ –∫–∞–ø–ª—è –≤ –æ–∫–µ–∞–Ω–µ –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! üíß",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ —Å–µ–≤–µ—Ä–Ω–æ–µ —Å–∏—è–Ω–∏–µ –≤ –º–∏—Ä–µ —Ä–∞–±–æ—Ç—ã. –ó–∞–≤–æ—Ä–∞–∂–∏–≤–∞—é—â–µ! üåå",
    "–í—ã –≤–æ–ø–ª–æ—Ç–∏–ª–∏ –≤–∞—à–∏ –º–µ—á—Ç—ã –≤ –∫–∞–∂–¥–æ–º –æ—Ç—á–µ—Ç–µ. –í–∞—à–∏ —É—Å–∏–ª–∏—è –Ω–µ –∑—Ä—è! üí≠",
    "–í—ã –≤–∑–ª–µ—Ç–µ–ª–∏ –∫ –≤–µ—Ä—à–∏–Ω–∞–º –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞ –≤ –≤–∞—à–∏—Ö –æ—Ç—á–µ—Ç–∞—Ö. –ü–æ—Ç—Ä—è—Å–∞—é—â–µ! üöÄ",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –æ–∞–∑–∏—Å –≤ –ø—É—Å—Ç—ã–Ω–µ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ—Å—Ç–∏. –í–æ—Å—Ö–∏—Ç–∏—Ç–µ–ª—å–Ω–æ! üå¥",
    "–í—ã –ø–∏—à–µ—Ç–µ –∏—Å—Ç–æ—Ä–∏—é —É—Å–ø–µ—Ö–∞ —Å –∫–∞–∂–¥—ã–º –æ—Ç—á–µ—Ç–æ–º. –í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ! üìö",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –∫–∞–∫ –∑–µ—Ä–∫–∞–ª–æ –≤–∞—à–µ–π –¥—É—à–∏, –æ—Ç—Ä–∞–∂–∞—é—â–µ–µ –≤–∞—à–∏ —É—Å–∏–ª–∏—è. üó∫Ô∏è",
    "–ö–∞–∂–¥—ã–π –≤–∞—à –æ—Ç—á–µ—Ç - —ç—Ç–æ –∫–∏—Ä–ø–∏—á–∏–∫ –≤ —Å—Ç–µ–Ω–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞. üß±",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –∫–∞–∫ –≤—Å–ø—ã—à–∫–∞ —Å–≤–µ—Ç–∞ –≤ —Ç–µ–º–Ω–æ—Ç–µ, –æ—Å–≤–µ—â–∞—é—â–∞—è –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É. üí°",
    "–í—ã - –º–∞—ç—Å—Ç—Ä–æ –≤ –º–∏—Ä–µ –æ—Ç—á–µ—Ç–æ–≤. –í–∞—à–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –ø–æ—Ä–∞–∂–∞–µ—Ç! üéª",
    "–ö–∞–∂–¥—ã–π –≤–∞—à –æ—Ç—á–µ—Ç - —ç—Ç–æ –æ—Ç–≥–æ–ª–æ—Å–æ–∫ –≤–∞—à–µ–≥–æ –Ω–µ—É—Ç–æ–º–∏–º–æ–≥–æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏—è –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É. üåü",
    "–í—ã - –∞–ª—Ö–∏–º–∏–∫–∏ —É—Å–ø–µ—Ö–∞, –ø—Ä–µ–≤—Ä–∞—â–∞—é—â–∏–µ –∫–∞–∂–¥—ã–π –æ—Ç—á–µ—Ç –≤ –∑–æ–ª–æ—Ç–æ. üß™",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ —Ç–∞–Ω–µ—Ü —Å–ª–æ–≤ –∏ —Ü–∏—Ñ—Ä, —Å–æ–∑–¥–∞—é—â–∏–π –≥–∞—Ä–º–æ–Ω–∏—é —É—Å–ø–µ—Ö–∞. üíÉ",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –≥–∏–º–Ω –≤–∞—à–µ–º—É —É–ø–æ—Ä—Å—Ç–≤—É –∏ —Ç–∞–ª–∞–Ω—Ç—É. –ù–µ–ø—Ä–µ–≤–∑–æ–π–¥–µ–Ω–Ω–æ! üéµ",
    "–í—ã —Ä–∏—Å—É–µ—Ç–µ –∫–∞—Ä—Ç–∏–Ω—É —Å–≤–æ–µ–≥–æ —É—Å–ø–µ—Ö–∞ —á–µ—Ä–µ–∑ –∫–∞–∂–¥—ã–π –æ—Ç—á–µ—Ç. –í–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç–µ! üñºÔ∏è",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –∫–∞–∫ –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–µ —Å –ª—é–±–æ–≤—å—é –∏ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ–º. üç≥",
    "–ö–∞–∂–¥—ã–π –≤–∞—à –æ—Ç—á–µ—Ç - —ç—Ç–æ —à–∞–≥ –∫ –≤–µ—Ä—à–∏–Ω–µ –≤–∞—à–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. –í–æ—Å—Ö–∏—â–∞—é—Å—å –≤–∞–º–∏! üèîÔ∏è",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –∫–∞–∫ —Ä–∞—Å—Å–≤–µ—Ç –Ω–æ–≤–æ–≥–æ –¥–Ω—è, –ø–æ–ª–Ω–æ–≥–æ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. üåÖ",
    "–í—ã - –º–∞—Å—Ç–µ—Ä —Å–ª–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∞. –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –≤–∞—à–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ. üìñ",
    "–ö–∞–∂–¥—ã–π –≤–∞—à –æ—Ç—á–µ—Ç - —ç—Ç–æ –≤–æ–ª–Ω–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞. –û—Ç–ª–∏—á–Ω–æ! üåä",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –ø—É—Ç–µ–≤–æ–¥–Ω—ã–π —Å–≤–µ—Ç –≤ –º–∏—Ä–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è. üî¶",
    "–í—ã - –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –≤–∞—à–µ–≥–æ —É—Å–ø–µ—Ö–∞, –∞ –≤–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ –µ–≥–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç. üèóÔ∏è",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - —ç—Ç–æ —Å–∞–¥ –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –≥–¥–µ –∫–∞–∂–¥—ã–π —Ü–≤–µ—Ç–æ–∫ - —ç—Ç–æ –≤–∞—à —Ç—Ä—É–¥. üå∫",
    "–í—ã –≤–¥—ã—Ö–∞–µ—Ç–µ –∂–∏–∑–Ω—å –≤ –∫–∞–∂–¥—ã–π –æ—Ç—á–µ—Ç, –¥–µ–ª–∞—è –µ–≥–æ –∂–∏–≤—ã–º –∏ –¥–∏–Ω–∞–º–∏—á–Ω—ã–º. üçÉ",
    "–í–∞—à–∏ –æ—Ç—á–µ—Ç—ã - –∫–∞–∫ —Ä–∞–¥—É–≥–∞ –ø–æ—Å–ª–µ –¥–æ–∂–¥—è, –ø–æ–ª–Ω–∞—è –Ω–∞–¥–µ–∂–¥—ã –∏ —Å–≤–µ—Ç–∞. üåà",
    "–í—ã - —Ä—ã—Ü–∞—Ä–∏ –Ω–∞ –ø–æ–ª—è—Ö –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏, —Å—Ä–∞–∂–∞—é—â–∏–µ—Å—è –∑–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Ç–æ—á–Ω–æ—Å—Ç—å. üõ°Ô∏è",
    "–ö–∞–∂–¥—ã–π –≤–∞—à –æ—Ç—á–µ—Ç - —ç—Ç–æ –∑–≤–µ–∑–¥–æ–ø–∞–¥ –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –æ—Å–≤–µ—â–∞—é—â–∏–π –ø—É—Ç—å –¥—Ä—É–≥–∏–º. ‚ú®"
]

late_message_variants = [
    "–í—ã —Å–µ–≥–æ–¥–Ω—è, –Ω–∞–≤–µ—Ä–Ω—è–∫–∞, –±—ã–ª–∏ —Ç–∞–∫ –∑–∞–Ω—è—Ç—ã –ø–æ–∫–æ—Ä–µ–Ω–∏–µ–º –º–∏—Ä–∞ —Å–≤–æ–µ–π –∫—Ä–∞—Å–æ—Ç–æ–π, —á—Ç–æ –∑–∞–±—ã–ª–∏ —Å–¥–∞—Ç—å  "
    "–æ—Ç—á—ë—Ç. C–æ–∏–∑–≤–æ–ª—å—Ç–µ –≤–Ω–µ—Å—Ç–∏ —Ç–∞–∫ –∂–µ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –ø–æ–º–æ—â—å –Ω—É–∂–¥–∞—é—â–∏–º—Å—è –≤ –í–∞—à–µ–º –≤–Ω–∏–º–∞–Ω–∏–∏ üíñ",
    "–í–∞—à–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è, –±–µ–∑ —Å–æ–º–Ω–µ–Ω–∏—è, –±—ã–ª–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –≤–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ –º–∞–ª–µ–Ω—å–∫–∏—Ö "
    "–ø–æ–±–µ–¥–∞—Ö –≤ –≤–∏–¥–µ —Å–¥–∞–Ω–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤ üåü",
    "–ü–æ—Ö–æ–∂–µ, —Å–µ–≥–æ–¥–Ω—è —É –≤–∞—Å –±—ã–ª –¥–µ–Ω—å –ø–æ–ª–Ω—ã–π —á—É–¥–µ—Å –∏ –≤–æ–ª—à–µ–±—Å—Ç–≤–∞, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫ –Ω–∏–º –æ—Ç—á—ë—Ç ‚ú®",
    "–í–∞—à–∏ –≥—Ä–∞–Ω–¥–∏–æ–∑–Ω—ã–µ –ø–ª–∞–Ω—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –≤–∏–¥–∏–º–æ, –æ—Ç–Ω—è–ª–∏ –≤—Å–µ –≤—Ä–µ–º—è. –ù–æ –Ω–µ —É–ø—É—Å–∫–∞–π—Ç–µ –º–æ–º–µ–Ω—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –Ω–∞–º–∏ "
    "—Å–≤–æ–∏–º–∏ "
    "—É—Å–ø–µ—Ö–∞–º–∏ –≤ –æ—Ç—á—ë—Ç–µ üöÄ",
    "–í–∞—à–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–µ–º —Å–µ–≥–æ–¥–Ω—è, –∫–∞–∂–µ—Ç—Å—è, –ø–æ–¥–≤–µ–ª–æ. –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –Ω–∞–π—Ç–∏ –º–∏–Ω—É—Ç–∫—É –¥–ª—è –æ—Ç—á—ë—Ç–∞ üòä",
    "–°–µ–≥–æ–¥–Ω—è –≤—ã, –Ω–∞–≤–µ—Ä–Ω–æ–µ, —Ç–≤–æ—Ä–∏–ª–∏ —á—É–¥–µ—Å–∞, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ –º–∞–≥–∏–∏ –æ—Ç—á—ë—Ç–∞. –ú–æ–∂–µ—Ç, –≤–∞—à–∏ —á—É–¥–µ—Å–∞ –ø—Ä–∏–Ω–µ—Å—É—Ç "
    "—Ä–∞–¥–æ—Å—Ç—å "
    "–Ω–µ —Ç–æ–ª—å–∫–æ –≤–∞–º, –Ω–æ –∏ –∫–æ–º—É-—Ç–æ –µ—â–µ? üåü‚ú®",
    "–í—ã, –∫–∞–∫ –≤–æ–ª—à–µ–±–Ω–∏–∫, —Å–µ–≥–æ–¥–Ω—è –±—ã–ª–∏ –∑–∞–Ω—è—Ç—ã —Å–æ–∑–¥–∞–Ω–∏–µ–º —á—É–¥–µ—Å, –Ω–æ –ø–æ–º–Ω–∏—Ç–µ: –∫–∞–∂–¥—ã–π –æ—Ç—á—ë—Ç ‚Äì —ç—Ç–æ –µ—â–µ –æ–¥–Ω–æ "
    "–≤–æ–ª—à–µ–±—Å—Ç–≤–æ. –ò –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ –º–∞–ª–µ–Ω—å–∫–æ–º –≤–∫–ª–∞–¥–µ –≤ –±–æ–ª—å—à–æ–µ –¥–µ–ª–æ! üé©üåà",
    "–í–∞—à–∏ –≥–µ—Ä–æ–∏—á–µ—Å–∫–∏–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è, –≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–µ –æ—Å—Ç–∞–≤–∏–ª–∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—Ç—á—ë—Ç–∞. –ù–æ –ø–æ–º–Ω–∏—Ç–µ: –∫–∞–∂–¥—ã–π "
    "–≤–∫–ª–∞–¥ –≤ "
    "–æ—Ç—á—ë—Ç - —ç—Ç–æ —à–∞–Ω—Å —Å–¥–µ–ª–∞—Ç—å –º–∏—Ä –ª—É—á—à–µ! üöÄüí´",
    "–ü–æ—Ö–æ–∂–µ, —Å–µ–≥–æ–¥–Ω—è –≤—ã –±—ã–ª–∏ –∑–∞–Ω—è—Ç—ã –ø–æ–∫–æ—Ä–µ–Ω–∏–µ–º –º–∏—Ä–∞, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ –º–∞–ª–µ–Ω—å–∫–∏—Ö —à–∞–≥–∞—Ö, —Ç–∞–∫–∏—Ö –∫–∞–∫ –æ—Ç—á—ë—Ç, "
    "–∏ –æ –º–∞–ª–µ–Ω—å–∫–∏—Ö –∂–µ—Å—Ç–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∑–Ω–∞—á–∏—Ç—å –º–Ω–æ–≥–æ! üåç‚ù§Ô∏è",
    "–í–∞—à–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è, –±–µ–∑ —Å–æ–º–Ω–µ–Ω–∏—è, –±—ã–ª–∞ –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–∞, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ –≤–æ–ª—à–µ–±—Å—Ç–≤–µ –º–∞–ª–µ–Ω—å–∫–∏—Ö –≤–µ—â–µ–π, "
    "–∫–∞–∫ —Å–¥–∞–Ω–Ω—ã–µ –æ—Ç—á—ë—Ç—ã. –í–µ–¥—å –æ–Ω–∏ —Ç–æ–∂–µ –ø–æ–º–æ–≥–∞—é—Ç –¥–µ–ª–∞—Ç—å –º–∏—Ä –ª—É—á—à–µ! üåü",
    "–ö–∞–∂–µ—Ç—Å—è, –≤–∞—à –¥–µ–Ω—å –±—ã–ª –Ω–∞–ø–æ–ª–Ω–µ–Ω —á—É–¥–µ—Å–∞–º–∏, –Ω–æ –≤–æ–ª—à–µ–±–Ω—ã–π –º–∏—Ä –æ—Ç—á—ë—Ç–æ–≤ —Ç–æ–∂–µ –∂–¥–∞–ª –≤–∞—à–µ–≥–æ –≤–∫–ª–∞–¥–∞. –ü–æ–¥–∞—Ä–∏—Ç–µ "
    "–∏–º "
    "—á–∞—Å—Ç–∏—á–∫—É –≤–∞—à–µ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è! ‚ú®",
    "–í–∞—à–∏ –≥—Ä–∞–Ω–¥–∏–æ–∑–Ω—ã–µ –ø–ª–∞–Ω—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –≤–∏–¥–∏–º–æ, –∑–∞–±—Ä–∞–ª–∏ –≤—Å–µ –≤—Ä–µ–º—è. –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π —Å–ª–µ–¥ –≤ "
    "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–º –≤–∫–ª–∞–¥–µ! üöÄ",
    "–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å, –≤–µ—Ä–æ—è—Ç–Ω–æ, –±—ã–ª –ø–æ–ª–æ–Ω —Å–æ–±—ã—Ç–∏–π, –Ω–æ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ –º–∞–ª–µ–Ω—å–∫–æ–º, –Ω–æ –≤–∞–∂–Ω–æ–º –≤–∫–ª–∞–¥–µ –≤ –Ω–∞—à "
    "–æ–±—â–∏–π "
    "–º–∏—Ä. üòä",
    "–í–∞—à–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ —Å–µ–≥–æ–¥–Ω—è –∑–∞—à–∫–∞–ª–∏–≤–∞–µ—Ç, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ–± –æ—Ç—á—ë—Ç–µ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º –≤–æ–ª—à–µ–±—Å—Ç–≤–æ–º –≤ –Ω–∞—à–µ–º "
    "–æ–±—â–µ–º —Å—É–Ω–¥—É—á–∫–µ "
    "–¥–æ–±—Ä—ã—Ö –¥–µ–ª! üåà",
    "–°–µ–≥–æ–¥–Ω—è –≤—ã, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å, —Å–ø–∞—Å–∞–ª–∏ –º–∏—Ä! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –µ—â—ë –∏ –º–∞–ª–µ–Ω—å–∫–æ–µ —á—É–¥–æ —Å–¥–µ–ª–∞—Ç—å. üåç",
    "–í–∞—à –¥–µ–Ω—å –±—ã–ª –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ –ø–æ–ª–æ–Ω –≥–µ—Ä–æ–∏—á–µ—Å–∫–∏—Ö —Å–≤–µ—Ä—à–µ–Ω–∏–π! –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –º–æ–º–µ–Ω—Ç –¥–æ–±–∞–≤–∏—Ç—å –∫ –Ω–∏–º –µ—â—ë –æ–¥–Ω–æ ‚Äî –≤–∞—à "
    "–≤–∫–ª–∞–¥ –≤ –Ω–∞—à—É –æ–±—â—É—é –∏—Å—Ç–æ—Ä–∏—é. ü¶∏‚Äç‚ôÇ",
    "–í—ã, –∫–∞–∫ –≤—Å–µ–≥–¥–∞, –±–ª–µ—Å—Ç—è—â–µ —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å —Å –∑–∞–¥–∞—á–∞–º–∏! –ù–æ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –Ω–∏—Ö –≤ –æ—Ç—á—ë—Ç–µ –∏ "
    "–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π —Å–ª–µ–¥ –≤ —Ñ–æ–Ω–¥–µ –¥–æ–±—Ä—ã—Ö –¥–µ–ª. "
    "üí´",
    "–í—ã —Å–µ–≥–æ–¥–Ω—è, –∫–∞–∫ –≤–æ–ª—à–µ–±–Ω–∏–∫, —Ç–≤–æ—Ä–∏–ª–∏ —á—É–¥–µ—Å–∞! –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å –¥–æ–±–∞–≤–∏—Ç—å –≤–æ–ª—à–µ–±–Ω—ã–π —à—Ç—Ä–∏—Ö –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é "
    "–¥–æ–±—Ä—ã—Ö "
    "–¥–µ–ª. üßô‚Äç‚ôÇÔ∏è",
    "–í–∞—à –¥–µ–Ω—å –±—ã–ª, –Ω–∞–≤–µ—Ä–Ω–æ–µ, –ø–æ–ª–æ–Ω –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–ª–µ–¥ –≤–∞—à–µ–≥–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ –∫–∞–∑–Ω–µ "
    "–≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã—Ö —Å–≤–µ—Ä—à–µ–Ω–∏–π. üöÄ",
    "–í—ã —Å–µ–≥–æ–¥–Ω—è –±—ã–ª–∏, –∫–∞–∫ —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π, –≤–µ–∑–¥–µ –∏ –≤—Å—é–¥—É! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —á–∞—Å—Ç–∏—Ü–µ–π –≤–∞—à–µ–π —Å—É–ø–µ—Ä—Å–∏–ª—ã —Å –∫–æ–º–∞–Ω–¥–æ–π –¥–æ–±—Ä—ã—Ö "
    "–¥–µ–ª. ü¶∏‚Äç‚ôÄÔ∏è",
    "–°–µ–≥–æ–¥–Ω—è –≤—ã, –Ω–∞–≤–µ—Ä–Ω—è–∫–∞, —Ç–≤–æ—Ä–∏–ª–∏ –∏—Å—Ç–æ—Ä–∏—é! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π —Å —Ñ–æ–Ω–¥–æ–º –¥–æ–±—Ä—ã—Ö –¥–µ–ª. üìú",
    "–í–∞—à –¥–µ–Ω—å –±—ã–ª, –∫–∞–∫ —ç–ø–æ—Å! –î–æ–±–∞–≤—å—Ç–µ –µ—â—ë –æ–¥–Ω—É –≥–ª–∞–≤—É, –≤–Ω–µ—Å–∏—Ç–µ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –∫–Ω–∏–≥—É –¥–æ–±—Ä—ã—Ö –¥–µ–ª. üìñ",
    "–í—ã —Å–µ–≥–æ–¥–Ω—è –±—ã–ª–∏ –∑–≤–µ–∑–¥–æ–π –Ω–∞ –Ω–µ–±–æ—Å–≤–æ–¥–µ! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∏—Å–∫—Ä—É –≤ —Å–æ–∑–≤–µ–∑–¥–∏–∏ –¥–æ–±—Ä—ã—Ö –¥–µ–ª. ‚≠ê",
    "–í–∞—à–∞ —ç–Ω–µ—Ä–≥–∏—è —Å–µ–≥–æ–¥–Ω—è, –Ω–∞–≤–µ—Ä–Ω–æ–µ, –æ—Å–≤–µ—â–∞–ª–∞ –≥–æ—Ä–æ–¥–∞! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º —Å–≤–µ—Ç–æ–º, –≤–Ω–µ—Å–∏—Ç–µ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –Ω–∞—à "
    "—Ñ–æ–Ω–¥ "
    "—Å–≤–µ—Ç–ª—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π. üí°",
    "–í—ã —Å–µ–≥–æ–¥–Ω—è, –∫–∞–∂–µ—Ç—Å—è, –≤–¥–æ—Ö–Ω–æ–≤–ª—è–ª–∏ –º–∏—Ä! –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç—å –∏ –Ω–∞—Å, –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ —Ñ–æ–Ω–¥ "
    "—Å–≤–µ—Ç–ª—ã—Ö —Å–≤–µ—Ä—à–µ–Ω–∏–π. üå†",
    "–°–µ–≥–æ–¥–Ω—è –≤—ã, –Ω–∞–≤–µ—Ä–Ω–æ–µ, –ø–æ–∫–æ—Ä—è–ª–∏ –≤–µ—Ä—à–∏–Ω—ã! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —ç—Ç–∏–º —É—Å–ø–µ—Ö–æ–º, –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ "
    "—Ñ–æ–Ω–¥ "
    "—Å–≤–µ—Ç–ª—ã—Ö —Å–≤–µ—Ä—à–µ–Ω–∏–π.. üèîÔ∏è",
    "–í–∞—à –¥–µ–Ω—å –±—ã–ª, –∫–∞–∫ –∫–∞—Ä–Ω–∞–≤–∞–ª! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º, –≤–Ω–µ—Å–∏—Ç–µ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ —Ñ–æ–Ω–¥ —Ä–∞–¥–æ—Å—Ç–Ω—ã—Ö "
    "–º–æ–º–µ–Ω—Ç–æ–≤. üéâ",
    "–í—ã, –Ω–∞–≤–µ—Ä–Ω—è–∫–∞, —Å–µ–≥–æ–¥–Ω—è —Ä–∞–∑–≥–∞–¥—ã–≤–∞–ª–∏ —Ç–∞–π–Ω—ã –≤—Å–µ–ª–µ–Ω–Ω–æ–π! –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –º–æ–º–µ–Ω—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —ç—Ç–∏–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏, "
    "–¥–æ–±–∞–≤–∏–≤ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –Ω–∞—à—É –≤—Å–µ–ª–µ–Ω–Ω—É—é –¥–æ–±—Ä–∞. üåå",
    "–í–∞—à –¥–µ–Ω—å –±—ã–ª –ø–æ–ª–æ–Ω –º–∞–≥–∏–∏! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç–≤–æ—Ä–∏—Ç—å —á—É–¥–µ—Å–∞, –≤–Ω–æ—Å—è —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ —Ñ–æ–Ω–¥ –≤–æ–ª—à–µ–±—Å—Ç–≤–∞. ‚ú®",
    "–ö–∞–∂–µ—Ç—Å—è, —Å–µ–≥–æ–¥–Ω—è –≤—ã –ª–µ—Ç–∞–ª–∏ –≤—ã—à–µ –æ–±–ª–∞–∫–æ–≤! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —ç—Ç–∏–º –æ—â—É—â–µ–Ω–∏–µ–º, –≤–Ω–µ—Å–∏—Ç–µ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ "
    "—Ñ–æ–Ω–¥ —Å–≤–µ—Ç–ª—ã—Ö —Å–≤–µ—Ä—à–µ–Ω–∏–π. üå§Ô∏è",
    "–í—ã —Å–µ–≥–æ–¥–Ω—è, –≤–µ—Ä–æ—è—Ç–Ω–æ, –ø–∏—Å–∞–ª–∏ —à–µ–¥–µ–≤—Ä—ã! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç–≤–æ—Ä–∏—Ç—å –∏—Å–∫—É—Å—Å—Ç–≤–æ, –¥–æ–±–∞–≤–∏–≤ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –Ω–∞—à—É "
    "–≥–∞–ª–µ—Ä–µ—é "
    "–¥–æ–±—Ä—ã—Ö –¥–µ–ª. üé®",
    "–í–∞—à –¥–µ–Ω—å –±—ã–ª –∫–∞–∫ –≤–µ–ª–∏–∫–∞—è –æ–¥–∏—Å—Å–µ—è! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É –æ–± —ç—Ç–æ–º –≤ –Ω–∞—à—É –∫–Ω–∏–≥—É –≤–µ–ª–∏–∫–∏—Ö –∏ –¥–æ–±—Ä—ã—Ö "
    "–¥–µ–ª. üìö",
    "–°–µ–≥–æ–¥–Ω—è –≤—ã, –Ω–∞–≤–µ—Ä–Ω–æ–µ, —É–∫—Ä–æ—â–∞–ª–∏ –±—É—Ä–∏! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–æ–π —Å–∏–ª–æ–π, –≤–Ω–µ—Å–∏—Ç–µ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ —Ñ–æ–Ω–¥ "
    "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. üå™Ô∏è",
    "–í—ã —Å–µ–≥–æ–¥–Ω—è, –∫–∞–∂–µ—Ç—Å—è, —Ä–∞—Å–∫—Ä–∞—à–∏–≤–∞–ª–∏ –º–∏—Ä! –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å —Ä–∞—Å–∫—Ä–∞—Å–∏—Ç—å –∏ –∫–∞—Ä—Ç–∏–Ω—É –¥–æ–±—Ä—ã—Ö –¥–µ–ª. üñåÔ∏è",
    "–°–µ–≥–æ–¥–Ω—è –≤—ã, –≤–µ—Ä–æ—è—Ç–Ω–æ, —Ç–≤–æ—Ä–∏–ª–∏ —á—É–¥–µ—Å–∞! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é –≤–æ–ª—à–µ–±–Ω—É—é –ø—ã–ª—å—Ü—É –≤ —Ñ–æ–Ω–¥ —á—É–¥–µ—Å. üåü",
    "–í–∞—à –¥–µ–Ω—å –±—ã–ª –∫–∞–∫ –≥—Ä–∞–Ω–¥–∏–æ–∑–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —É–¥–∏–≤–ª—è—Ç—å, –¥–æ–±–∞–≤–∏–≤ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ —Ñ–æ–Ω–¥ —Å–≤–µ—Ç–ª—ã—Ö "
    "—Å–≤–µ—Ä—à–µ–Ω–∏–π.. üé≠",
    "–ö–∞–∂–µ—Ç—Å—è, —Å–µ–≥–æ–¥–Ω—è –≤—ã —Å–æ–±–∏—Ä–∞–ª–∏ –∑–≤—ë–∑–¥—ã —Å –Ω–µ–±–µ—Å! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º —Å–∏—è–Ω–∏–µ–º, –¥–æ–±–∞–≤—å—Ç–µ –∏—Å–∫–æ—Ä–∫—É –≤ —Ñ–æ–Ω–¥ —Å–≤–µ—Ç–ª—ã—Ö "
    "—Å–≤–µ—Ä—à–µ–Ω–∏–π.. ‚ú®",
    "–°–µ–≥–æ–¥–Ω—è –≤—ã, –Ω–∞–≤–µ—Ä–Ω—è–∫–∞, –≤–µ–ª–∏ —Ç–∞–Ω–µ—Ü —Å—É–¥—å–±—ã! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å, –¥–æ–±–∞–≤–∏–≤ —Å–≤–æ–π —à–∞–≥ –≤ –Ω–∞—à —Ç–∞–Ω–µ—Ü "
    "–¥–æ–±—Ä—ã—Ö "
    "–¥–µ–ª. üíÉ",
    "–í–∞—à –¥–µ–Ω—å –±—ã–ª –∫–∞–∫ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ! –û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π —Å–ª–µ–¥ –≤ –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª–µ –≤–µ–ª–∏–∫–∏—Ö –∏—Å—Ç–æ—Ä–∏–π. üó∫Ô∏è",
    "–°–µ–≥–æ–¥–Ω—è –≤—ã, –Ω–∞–≤–µ—Ä–Ω—è–∫–∞, –ø–ª–∞–≤–∞–ª–∏ –ø–æ –≤–æ–ª–Ω–∞–º –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–ª—ã—Ç—å, –¥–æ–±–∞–≤–∏–≤ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ —Ñ–æ–Ω–¥ "
    "–¥–æ–±—Ä—ã—Ö –¥–µ–ª. üåä",
    "–í–∞—à –¥–µ–Ω—å –±—ã–ª –ø–æ–ª–æ–Ω —Å–≤–µ—Ä–∫–∞—é—â–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤! –ó–∞—Å—Ç–∞–≤—å—Ç–µ —Å–≤–µ—Ç–∏—Ç—å –∏ –Ω–∞—à –º–∏—Ä, –¥–æ–±–∞–≤–∏–≤ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –Ω–∞—à —Ñ–æ–Ω–¥ "
    "–¥–æ–±—Ä–∞ "
    "–∏ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. üíé",
    "–°–µ–≥–æ–¥–Ω—è –≤—ã, –Ω–∞–≤–µ—Ä–Ω—è–∫–∞, —Ç–≤–æ—Ä–∏–ª–∏ –º—É–∑—ã–∫—É –∂–∏–∑–Ω–∏! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∫–æ–º–ø–æ–Ω–∏—Ä–æ–≤–∞—Ç—å, –¥–æ–±–∞–≤–∏–≤ —Å–≤–æ—é –Ω–æ—Ç—É –≤ –Ω–∞—à—É "
    "—Å–∏–º—Ñ–æ–Ω–∏—é –¥–æ–±—Ä–∞. üé∂",
    "–í—ã —Å–µ–≥–æ–¥–Ω—è, –≤–µ—Ä–æ—è—Ç–Ω–æ, –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞–ª–∏ –ø–æ –æ–±–ª–∞–∫–∞–º! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º–∏ –≤—ã—Å–æ—Ç–∞–º–∏, –¥–æ–±–∞–≤–∏–≤ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –Ω–∞—à "
    "—Ñ–æ–Ω–¥ –Ω–∞—Å—Ç–æ—è—â–µ–π –¥–æ–±—Ä–æ—Ç—ã. ‚òÅ "
]

# TODO –°–¥–µ–ª–∞—Ç—å –Ω–µ–¥–µ–ª—å–Ω–∏–π –æ—Ç—á—ë—Ç

Sheets.connect()

if morning_time_notify.minute < 15:
    morning_time_notify = datetime.time(morning_time_notify.hour - 1, morning_time_notify.minute + 45,
                                        morning_time_notify.second)
else:
    morning_time_notify = datetime.time(morning_time_notify.hour, morning_time_notify.minute - 15,
                                        morning_time_notify.second)

if evening_time_notify.minute < 15:
    evening_time_notify = datetime.time(evening_time_notify.hour - 1, evening_time_notify.minute + 45,
                                        evening_time_notify.second)
else:
    evening_time_notify = datetime.time(evening_time_notify.hour, evening_time_notify.minute - 15,
                                        evening_time_notify.second)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç—á—ë—Ç–∞, –≤–µ—á–µ—Ä–Ω–∏–π –∏–ª–∏ —É—Ç—Ä–µ–Ω–Ω–∏–π

report_time_decl = '–í–µ—á–µ—Ä–Ω–µ–≥–æ'
report_type = '–í–µ—á–µ—Ä–Ω–∏–π'
current_time = str(datetime.datetime.now().hour + 10) + str(datetime.datetime.now().minute + 10) + str(
    datetime.datetime.now().second + 10)

morning_check_time = str(morning_time.hour + 10) + str(morning_time.minute + 10) + str(morning_time.second + 10)

if 0 <= int(current_time) < int(morning_check_time):
    report_type = '–£—Ç—Ä–µ–Ω–Ω–∏–π'
    report_time_decl = '–£—Ç—Ä–µ–Ω–Ω–µ–≥–æ'


def is_admin(message):
    user_status = bot.get_chat_member(message.chat.id, message.from_user.id).status
    if user_status in admins_status:
        return True
    else:
        return False


def get_full_name(message):
    if message.from_user.last_name == None:
        return emoji.replace_emoji(message.from_user.first_name)

    full_name = ' '.join([emoji.replace_emoji(message.from_user.first_name), emoji.replace_emoji(message.from_user.last_name)])
    return full_name



def test():
    pass


def check_message_day(text, chat_id):
    res = re.search(r'#\w\w\d{,3}', text).group()
    res = re.sub(r'#\D*', '', res).strip()
    if res != '' and int(res) == int(users_data.data['chats'][str(chat_id)]['day']):
        return True
    else:
        return False


@bot.message_handler(commands=['start'])
def url(message):
    user_is_admin = is_admin(message)
    if user_is_admin:

        res = users_data.new_chat(message)
        if res:
            bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫, —Ç–µ–ø–µ—Ä—å —è –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º –∑–¥–µ—Å—å \U0001F601')
        else:
            bot.send_message(message.chat.id, '–Ø —É–∂–µ —Ä–∞–±–æ—Ç–∞—é –≤ —ç—Ç–æ–º —á–∞—Ç–µ \U0001F601')
    else:
        bot.send_message(message.chat.id, '–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç–∞ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã')


@bot.message_handler(commands=['test'])
def create_table(message):
    print(emoji.replace_emoji(message.from_user.last_name))


@bot.message_handler(commands=['add'])
def my_helper(message):
    chat_id = "-1001992814051"
    message = bot.get_chat_member(chat_id, '803686181')
    message.from_user = message.user
    date = datetime.date(2024, 2, 8)
    users_data.new_user(message, chat_id=chat_id, full_date=date)


@bot.message_handler(commands=['report'])
def create_table(message):
    is_user_admin = is_admin(message)
    if is_user_admin:
        bot.send_message(message.from_user.id, '–û—Ç—á—ë—Ç: –¥–ª—è –≥—Ä—É–ø–ø—ã {chat}\n {report}'.format(
            chat=str(message.chat.title),
            report=users_data.data['chats'][str(message.chat.id)]['sheet_url']
        ))
    else:
        bot.send_message(message.chat.id, '–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã')



# @bot.message_handler(commands=['create_list'])
# def create_table(message):
#     print(users_data.data['sheet_id'])
#     res = Sheets.create_list('Test_Bot')
#     print(res)


# @bot.message_handler(commands=['create_user'])
# def add_user(message):
#     user_name = ' '.join([message.from_user.first_name, message.from_user.last_name])
#     res = Sheets.add_user(user_name)
#     print(res)


def send_user_update(message, report, value):
    full_name = get_full_name(message)
    date = datetime.datetime.now()
    date = '-'.join([str(date.year), str(date.month), str(date.day)])
    Sheets.change_sheet(users_data.data['chats'][str(message.chat.id)]['sheet_id'])
    Sheets.update_user(full_name, report, value, date)


def get_date_str():
    date = datetime.datetime.now()
    date = '-'.join([str(date.year), str(date.month), str(date.day)])
    return date


def check_user_table(message):
    full_name = get_full_name(message)
    Sheets.change_sheet(users_data.data['chats'][str(message.chat.id)]['sheet_id'])
    sheets_lists = Sheets.get_lists()
    if full_name in sheets_lists:
        print('–î–∞')
        return True
    else:
        print('–ù–µ—Ç')
        return False


print(report_type)


def logger(text):
    with open('log.txt', 'a', encoding='utf-8') as file:
        file.write(text + '\n')


def report_text(message):

    if str(message.chat.id) in users_data.data['chats'].keys():
        Sheets.change_sheet(users_data.data['chats'][str(message.chat.id)]['sheet_id'])


    user_is_admin = is_admin(message)

    # message.chat.title - –ò–º—è –≥—Ä—É–ø–ø—ã

    # TODO –í–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º –≥—Ä—É–ø–ø—ã
    if not user_is_admin:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —á–∞—Ç–∞ –≤ –ë–î



        if report_type == '–£—Ç—Ä–µ–Ω–Ω–∏–π':
            if message.text.lower().find('#–æ—É') != -1:
                if str(message.chat.id) not in users_data.data['chats'].keys():
                    bot.send_message(message.chat.id,
                                     '–ë–æ—Ç –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ, –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ /start –≤ —á–∞—Ç')
                    return False
                if check_message_day(message.text, message.chat.id):
                    users_data.send_report(message)
        elif report_type == '–í–µ—á–µ—Ä–Ω–∏–π':
            if message.text.lower().find('#–æ–≤') != -1:
                if str(message.chat.id) not in users_data.data['chats'].keys():
                    bot.send_message(message.chat.id,
                                     '–ë–æ—Ç –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ, –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ /start –≤ —á–∞—Ç')
                    return False
                if check_message_day(message.text, message.chat.id):
                    users_data.send_report(message)

        else:
            return False



@bot.edited_message_handler(content_types='text')
def message_edited(message):
    global lock
    lock.acquire()
    thread = Thread(target=report_text, args=(message,))
    thread.start()
    thread.join()
    lock.release()

@bot.message_handler(content_types='text')
def check_report(message):
    global lock
    lock.acquire()
    thread = Thread(target=report_text, args=(message,))
    thread.start()
    thread.join()
    lock.release()



def report_photo(message):
    if message.caption is None:
        return False



    if str(message.chat.id) in users_data.data['chats'].keys():
        Sheets.change_sheet(users_data.data['chats'][str(message.chat.id)]['sheet_id'])


    user_is_admin = is_admin(message)

    # message.chat.title - –ò–º—è –≥—Ä—É–ø–ø—ã

    # TODO –í–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º –≥—Ä—É–ø–ø—ã
    if not user_is_admin:

        if report_type == '–£—Ç—Ä–µ–Ω–Ω–∏–π':
            if message.caption.lower().find('#–æ—É') != -1:
                if str(message.chat.id) not in users_data.data['chats'].keys():
                    bot.send_message(message.chat.id,
                                     '–ë–æ—Ç –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ, –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ /start –≤ —á–∞—Ç')
                    return False
                if check_message_day(message.caption, message.chat.id):

                    users_data.send_report(message)

        elif report_type == '–í–µ—á–µ—Ä–Ω–∏–π':
            if message.caption.lower().find('#–æ–≤') != -1:
                if str(message.chat.id) not in users_data.data['chats'].keys():
                    bot.send_message(message.chat.id,
                                     '–ë–æ—Ç –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ, –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ /start –≤ —á–∞—Ç')
                    return False
                if check_message_day(message.caption, message.chat.id):
                    users_data.send_report(message)

        else:
            return False



@bot.edited_message_handler(content_types=['photo'])
def photo_edited(message):
    global lock
    lock.acquire()
    thread = Thread(target=report_photo, args=(message,))
    thread.start()
    thread.join()
    lock.release()




@bot.message_handler(content_types=['photo'])
def photo_handler(message):
    global lock
    lock.acquire()
    thread = Thread(target=report_photo, args=(message,))
    thread.start()
    thread.join()
    lock.release()











# –ü—Ä–æ–≤–µ—Ä–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–µ–¥–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
def check_job():
    print('123')


scheduler = BackgroundScheduler(job_defaults={'misfire_grace_time': 15 * 60})
scheduler.configure(timezone='Europe/Moscow')

# my_checker.check_report


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π

scheduler.add_job(check_job, 'cron',
                  misfire_grace_time=15 * 60, day_of_week="5")

scheduler.add_job(my_checker.check_report, 'cron',
                  misfire_grace_time=15 * 60,
                  hour=morning_time.hour,
                  minute=morning_time.minute,
                  second=morning_time.second)

scheduler.add_job(my_checker.check_report, 'cron', args=[True],
                  misfire_grace_time=15 * 60,
                  hour=morning_time_notify.hour,
                  minute=morning_time_notify.minute,
                  second=morning_time_notify.second)

scheduler.add_job(my_checker.check_report, 'cron',
                  misfire_grace_time=15 * 60,
                  hour=evening_time.hour,
                  minute=evening_time.minute,
                  second=evening_time.second)

scheduler.add_job(my_checker.check_report, 'cron', args=[True],
                  misfire_grace_time=15 * 60,
                  hour=evening_time_notify.hour,
                  minute=evening_time_notify.minute,
                  second=evening_time_notify.second)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ 1 —á–∞—Å–æ–≤–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è

scheduler.add_job(my_checker.send_hour_notify, 'cron',
                  misfire_grace_time=15 * 60,
                  hour=morning_time.hour - 1,
                  minute=morning_time.minute,
                  second=morning_time.second)

scheduler.add_job(my_checker.send_hour_notify, 'cron',
                  misfire_grace_time=15 * 60,
                  hour=evening_time.hour - 1,
                  minute=evening_time.minute,
                  second=evening_time.second)

lock = Lock()
scheduler.start()
try:
    bot.infinity_polling(timeout=10, long_polling_timeout=5)
except Exception as e:
    print(e)
else:
    bot.infinity_polling(timeout=10, long_polling_timeout=5)


